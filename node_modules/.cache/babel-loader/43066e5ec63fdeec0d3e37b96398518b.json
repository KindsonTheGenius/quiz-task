{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\Quiz.js\";\nimport Dexie from 'dexie';\nimport React, { Component } from 'react';\nimport Scoresheet from './Scoresheet';\nimport \"./styles.css\";\nexport class Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuestions = () => {\n      let arr = [];\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.each(item => arr.push(item)).then(() => this.setState({\n        questionBank: arr\n      }));\n    };\n\n    this.retakeQuiz = () => {\n      this.setState({\n        currentIndex: 0,\n        score: 0\n      });\n    };\n\n    this.nextQuestionHander = () => {\n      this.setState({\n        currentIndex: this.state.currentIndex + 1,\n        disabled: true,\n        disabledOptions: false,\n        option1: false,\n        option2: false,\n        option3: false,\n        option4: false\n      });\n    };\n\n    this.checkAnswer = () => {\n      const {\n        score,\n        userAnswer,\n        correctAnswer\n      } = this.state;\n\n      if (this.answerIsCorrect(userAnswer)) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        disabledOptions: true,\n        disabled: false,\n        correctAnswer: {\n          correctAnswer\n        }\n      });\n    };\n\n    this.setUserAnswer = event => {\n      if (event.target.id === \"o1\") {\n        this.setState({\n          option1: event.target.checked,\n          userAnswer: event.target.value\n        });\n      } else if (event.target.id === \"o2\") {\n        this.setState({\n          option2: event.target.checked,\n          userAnswer: event.target.value\n        });\n      } else if (event.target.id === \"o3\") {\n        this.setState({\n          option3: event.target.checked,\n          userAnswer: event.target.value\n        });\n      } else if (event.target.id === \"o4\") {\n        this.setState({\n          option4: event.target.checked,\n          userAnswer: event.target.value\n        });\n      }\n    };\n\n    this.state = {\n      questionBank: [],\n      currentIndex: 0,\n      userAnswer: null,\n      score: 0,\n      disabled: true,\n      disabledOptions: false,\n      option1: false,\n      option2: false,\n      option3: false,\n      option4: false\n    };\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.answerIsCorrect = this.answerIsCorrect.bind(this);\n  } //Reads the question from IndexedDB and load them into the questionBank state\n\n\n  componentDidMount() {\n    this.loadQuestions();\n  }\n\n  answerIsCorrect(userAnswer) {\n    const {\n      currentIndex,\n      questionBank\n    } = this.state;\n\n    if (userAnswer === questionBank[currentIndex].answer) {\n      return true;\n    } else {\n      return false;\n    }\n  } //Increment score if answer is correct and enable Next button\n\n\n  render() {\n    const {\n      currentIndex,\n      questionBank,\n      score,\n      userAnswer,\n      correctAnswer\n    } = this.state;\n    var currentQuestion = questionBank[currentIndex];\n\n    if (currentIndex <= questionBank.length - 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"questionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" \", currentQuestion.question), React.createElement(\"fieldset\", {\n        disabled: this.state.disabledOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"o1\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option1,\n        checked: this.state.option1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), \" \", currentQuestion.option1, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"o2\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option2,\n        checked: this.state.option2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \" \", currentQuestion.option2, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"o3\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option3,\n        checked: this.state.option3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), \" \", currentQuestion.option3, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"o4\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option4,\n        checked: this.state.option4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \" \", currentQuestion.option4, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.checkAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Check Answer\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.nextQuestionHander,\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Next\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \"Your answer: \", userAnswer, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), \"Correct anwer: \", correctAnswer);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Scoresheet, {\n        score: score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.retakeQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Retake Quiz\"));\n    }\n  }\n\n}\nexport default Quiz;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Quiz.js"],"names":["Dexie","React","Component","Scoresheet","Quiz","constructor","props","loadQuestions","arr","db","version","stores","questions","open","catch","console","log","each","item","push","then","setState","questionBank","retakeQuiz","currentIndex","score","nextQuestionHander","state","disabled","disabledOptions","option1","option2","option3","option4","checkAnswer","userAnswer","correctAnswer","answerIsCorrect","setUserAnswer","event","target","id","checked","value","bind","componentDidMount","answer","render","currentQuestion","length","question"],"mappings":"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","sourcesContent":["import Dexie from 'dexie'\r\nimport React, { Component } from 'react'\r\nimport Scoresheet from './Scoresheet'\r\nimport \"./styles.css\"\r\n\r\n\r\nexport class Quiz extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            questionBank: [],\r\n            currentIndex: 0,\r\n            userAnswer: null,\r\n            score:0,\r\n            disabled: true,\r\n            disabledOptions: false,\r\n            option1: false,\r\n            option2: false,\r\n            option3: false,\r\n            option4: false\r\n        }\r\n\r\n        this.checkAnswer = this.checkAnswer.bind(this)\r\n        this.answerIsCorrect = this.answerIsCorrect.bind(this)\r\n    }\r\n    \r\n    //Reads the question from IndexedDB and load them into the questionBank state\r\n    loadQuestions = () => {\r\n        let arr = [];\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.loadQuestions()\r\n    }\r\n\r\n    retakeQuiz = () => {\r\n        this.setState({\r\n            currentIndex: 0,\r\n            score:0\r\n        })\r\n    }\r\n\r\n    //Increment the currentIndex\r\n    nextQuestionHander = () => {\r\n        this.setState({\r\n            currentIndex:  this.state.currentIndex + 1,\r\n            disabled:true,\r\n            disabledOptions: false,\r\n            option1: false,\r\n            option2: false,\r\n            option3: false,\r\n            option4: false\r\n        })\r\n    }\r\n\r\n    answerIsCorrect(userAnswer){\r\n        const {currentIndex, questionBank} = this.state\r\n        if(userAnswer === questionBank[currentIndex].answer) {\r\n            return true\r\n        } else {return false}\r\n    }\r\n\r\n    //Increment score if answer is correct and enable Next button\r\n    checkAnswer = () =>{\r\n        const {score, userAnswer, correctAnswer} = this.state\r\n            if(this.answerIsCorrect(userAnswer)){\r\n                this.setState({\r\n                    score: score + 1\r\n                })\r\n            }\r\n            this.setState({\r\n                disabledOptions:true,\r\n                disabled: false,\r\n                correctAnswer: {correctAnswer}\r\n            })\r\n    }\r\n    \r\n    setUserAnswer = (event) => {\r\n        if(event.target.id === \"o1\") { \r\n            this.setState({option1: event.target.checked, userAnswer: event.target.value })       \r\n        }\r\n        else if(event.target.id ===\"o2\") {\r\n            this.setState({option2: event.target.checked, userAnswer: event.target.value })\r\n        }\r\n        else if(event.target.id ===\"o3\") {\r\n            this.setState({option3: event.target.checked, userAnswer: event.target.value })\r\n        }\r\n        else if(event.target.id ===\"o4\") {\r\n            this.setState({option4: event.target.checked, userAnswer: event.target.value })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {currentIndex, questionBank, score, userAnswer, correctAnswer} = this.state\r\n        var currentQuestion = questionBank[currentIndex]      \r\n\r\n        if(currentIndex <= questionBank.length -1) {\r\n            return (\r\n                <div>                    \r\n                    <div className=\"questionBox\" >\r\n                    <h1> {currentQuestion.question}</h1>\r\n                    <fieldset disabled={this.state.disabledOptions}>\r\n                        <input id=\"o1\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option1} checked={this.state.option1}/> {currentQuestion.option1}<br />\r\n                        <input id=\"o2\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option2} checked={this.state.option2}/> {currentQuestion.option2}<br />\r\n                        <input id=\"o3\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option3} checked={this.state.option3}/> {currentQuestion.option3}<br />\r\n                        <input id=\"o4\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option4} checked={this.state.option4}/> {currentQuestion.option4}<br />\r\n                    </fieldset> \r\n                    <button onClick={this.checkAnswer}>Check Answer</button><br />\r\n                    </div>                   \r\n                <button \r\n                onClick={this.nextQuestionHander} \r\n                disabled = {this.state.disabled}>Next</button><br />\r\n                Your answer: {userAnswer} <br />\r\n                Correct anwer: {correctAnswer}\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                <Scoresheet score={score} ></Scoresheet>\r\n                <button onClick={this.retakeQuiz} >Retake Quiz</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n"]},"metadata":{},"sourceType":"module"}