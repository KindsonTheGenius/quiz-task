{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\Quiz.js\";\nimport Dexie from 'dexie';\nimport React, { Component } from 'react';\nimport QuestionBox from './QuestionBox';\nimport QuestionManager from './QuestionManager';\nexport class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      currentIndex: 0\n    };\n\n    this.loadQuestions = () => {\n      let arr = [];\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.each(item => arr.push(item)).then(() => this.setState({\n        questionBank: arr\n      }));\n    };\n\n    this.showOneQuestion = () => {\n      const {\n        currentIndex\n      } = this.state; //get the current question index\n\n      this.setState(() => {\n        return {// question: QuizData[currentIndex].question\n          // options : QuizData[currentIndex].options,\n          // answer: QuizData[currentIndex].answer          \n        };\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(QuestionBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(QuestionManager, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Quiz;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Quiz.js"],"names":["Dexie","React","Component","QuestionBox","QuestionManager","Quiz","state","questionBank","currentIndex","loadQuestions","arr","db","version","stores","questions","open","catch","console","log","each","item","push","then","setState","showOneQuestion","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAyB,eAAzB;AACA,OAAOC,eAAP,MAA6B,mBAA7B;AAGA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEhCI,KAFgC,GAExB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,YAAY,EAAE;AAFV,KAFwB;;AAAA,SAQhCC,aARgC,GAQhB,MAAM;AAClB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,EAAE,GAAG,IAAIX,KAAJ,CAAU,aAAV,CAAT;AACAW,MAAAA,EAAE,CAACC,OAAH,CAAW,CAAX,EAAcC,MAAd,CAAqB;AACjBC,QAAAA,SAAS,EAAE;AADM,OAArB;AAIAH,MAAAA,EAAE,CAACI,IAAH,GAAUC,KAAV,CAAgB,YAAU;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAFD;AAIAP,MAAAA,EAAE,CAACG,SAAH,CAAaK,IAAb,CAAmBC,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAASD,IAAT,CAA5B,EACCE,IADD,CACM,MAAM,KAAKC,QAAL,CAAc;AAAChB,QAAAA,YAAY,EAAEG;AAAf,OAAd,CADZ;AAEH,KArB+B;;AAAA,SAwBjCc,eAxBiC,GAwBf,MAAM;AACvB,YAAM;AAAChB,QAAAA;AAAD,UAAiB,KAAKF,KAA5B,CADuB,CACW;;AAC9B,WAAKiB,QAAL,CAAc,MAAM;AAChB,eAAO,CACH;AACA;AACA;AAHG,SAAP;AAKH,OAND;AAOH,KAjC+B;AAAA;;AAmChCE,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA3C+B;AA8CpC,eAAepB,IAAf","sourcesContent":["import Dexie from 'dexie'\r\nimport React, { Component } from 'react'\r\nimport QuestionBox  from './QuestionBox'\r\nimport QuestionManager  from './QuestionManager'\r\n\r\n\r\nexport class Quiz extends Component {\r\n        \r\n    state = {\r\n        questionBank: [],\r\n        currentIndex: 0\r\n    }\r\n\r\n    //Reads the question from IndexedDB and load them into the questionBank state\r\n    loadQuestions = () => {\r\n        let arr = [];\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n   //Component that holds the current quiz\r\n   showOneQuestion = () => {\r\n    const {currentIndex} = this.state //get the current question index\r\n        this.setState(() => {\r\n            return {\r\n                // question: QuizData[currentIndex].question\r\n                // options : QuizData[currentIndex].options,\r\n                // answer: QuizData[currentIndex].answer          \r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <QuestionBox></QuestionBox>\r\n                <QuestionManager></QuestionManager>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n"]},"metadata":{},"sourceType":"module"}