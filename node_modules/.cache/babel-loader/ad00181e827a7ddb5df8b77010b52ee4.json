{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\Quiz.js\";\nimport Dexie from 'dexie';\nimport React, { Component } from 'react';\nimport QuestionBox from './QuestionBox';\nimport Scoresheet from './Scoresheet';\nimport \"./styles.css\";\nexport class Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuestions = () => {\n      let arr = [];\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.each(item => arr.push(item)).then(() => this.setState({\n        questionBank: arr\n      }));\n    };\n\n    this.retakeQuiz = () => {\n      this.setState({\n        currentIndex: 0,\n        score: 0\n      });\n    };\n\n    this.nextQuestionHander = () => {\n      this.setState({\n        currentIndex: this.state.currentIndex + 1\n      });\n    };\n\n    this.checkAnswer = event => {\n      console.log(event.target.innerHTML);\n      const {\n        currentIndex,\n        questionBank,\n        score\n      } = this.state;\n\n      if (event.target.innerHTML === questionBank[currentIndex].answer) {\n        this.setState({\n          score: score + 1\n        });\n      } // this.setState({\n      //     //userAnswer: selectedAnswer,\n      //     disabled:false\n      // })\n\n    };\n\n    this.state = {\n      questionBank: [],\n      currentIndex: 0,\n      userAnswer: null,\n      score: 0,\n      disabled: true\n    };\n    this.checkAnswer = this.checkAnswer.bind(this);\n  } //Reads the question from IndexedDB and load them into the questionBank state\n\n\n  componentDidMount() {\n    this.loadQuestions();\n  }\n\n  render() {\n    const {\n      currentIndex,\n      questionBank,\n      score,\n      answered\n    } = this.state;\n    var currentQuestion = questionBank[currentIndex];\n\n    if (currentIndex <= questionBank.length - 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"questionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \" \", currentQuestion.question), React.createElement(\"ol\", {\n        type: \"A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: this.checkAnswer,\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, currentQuestion.option1), React.createElement(\"li\", {\n        onClick: this.checkAnswer,\n        className: \"options \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, currentQuestion.option2), React.createElement(\"li\", {\n        onClick: this.checkAnswer,\n        className: \"options \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, currentQuestion.option3), React.createElement(\"li\", {\n        onClick: this.checkAnswer,\n        className: \"options \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, currentQuestion.option4))), React.createElement(\"button\", {\n        onClick: this.nextQuestionHander,\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Next\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Scoresheet, {\n        score: score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.retakeQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Retake Quiz\"));\n    }\n  }\n\n}\nexport default Quiz;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Quiz.js"],"names":["Dexie","React","Component","QuestionBox","Scoresheet","Quiz","constructor","props","loadQuestions","arr","db","version","stores","questions","open","catch","console","log","each","item","push","then","setState","questionBank","retakeQuiz","currentIndex","score","nextQuestionHander","state","checkAnswer","event","target","innerHTML","answer","userAnswer","disabled","bind","componentDidMount","render","answered","currentQuestion","length","question","option1","option2","option3","option4"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAyB,eAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,cAAP;AAGA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAEhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,aAlBmB,GAkBH,MAAM;AAClB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,EAAE,GAAG,IAAIV,KAAJ,CAAU,aAAV,CAAT;AACAU,MAAAA,EAAE,CAACC,OAAH,CAAW,CAAX,EAAcC,MAAd,CAAqB;AACjBC,QAAAA,SAAS,EAAE;AADM,OAArB;AAIAH,MAAAA,EAAE,CAACI,IAAH,GAAUC,KAAV,CAAgB,YAAU;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAFD;AAIAP,MAAAA,EAAE,CAACG,SAAH,CAAaK,IAAb,CAAmBC,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAASD,IAAT,CAA5B,EACCE,IADD,CACM,MAAM,KAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAEd;AAAf,OAAd,CADZ;AAEH,KA/BkB;;AAAA,SAsCnBe,UAtCmB,GAsCN,MAAM;AACf,WAAKF,QAAL,CAAc;AACVG,QAAAA,YAAY,EAAE,CADJ;AAEVC,QAAAA,KAAK,EAAC;AAFI,OAAd;AAIH,KA3CkB;;AAAA,SA+CnBC,kBA/CmB,GA+CE,MAAM;AACvB,WAAKL,QAAL,CAAc;AACVG,QAAAA,YAAY,EAAG,KAAKG,KAAL,CAAWH,YAAX,GAA0B;AAD/B,OAAd;AAGH,KAnDkB;;AAAA,SAuDnBI,WAvDmB,GAuDJC,KAAD,IAAU;AACpBd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACC,MAAN,CAAaC,SAAzB;AACA,YAAM;AAACP,QAAAA,YAAD;AAAeF,QAAAA,YAAf;AAA6BG,QAAAA;AAA7B,UAAsC,KAAKE,KAAjD;;AACA,UAAGE,KAAK,CAACC,MAAN,CAAaC,SAAb,KAA2BT,YAAY,CAACE,YAAD,CAAZ,CAA2BQ,MAAzD,EAAgE;AAC5D,aAAKX,QAAL,CAAc;AACVI,UAAAA,KAAK,EAAEA,KAAK,GAAG;AADL,SAAd;AAGH,OAPmB,CASpB;AACA;AACA;AACA;;AACH,KApEkB;;AAGf,SAAKE,KAAL,GAAa;AACTL,MAAAA,YAAY,EAAE,EADL;AAETE,MAAAA,YAAY,EAAE,CAFL;AAGTS,MAAAA,UAAU,EAAE,IAHH;AAITR,MAAAA,KAAK,EAAC,CAJG;AAKTS,MAAAA,QAAQ,EAAE;AALD,KAAb;AAQA,SAAKN,WAAL,GAAmB,KAAKA,WAAL,CAAiBO,IAAjB,CAAsB,IAAtB,CAAnB;AAEH,GAf+B,CAmBhC;;;AAiBAC,EAAAA,iBAAiB,GAAE;AACf,SAAK7B,aAAL;AACH;;AAkCD8B,EAAAA,MAAM,GAAG;AACL,UAAM;AAACb,MAAAA,YAAD;AAAeF,MAAAA,YAAf;AAA6BG,MAAAA,KAA7B;AAAoCa,MAAAA;AAApC,QAAgD,KAAKX,KAA3D;AACA,QAAIY,eAAe,GAAGjB,YAAY,CAACE,YAAD,CAAlC;;AAEA,QAAGA,YAAY,IAAIF,YAAY,CAACkB,MAAb,GAAqB,CAAxC,EAA2C;AACvC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMD,eAAe,CAACE,QAAtB,CADA,EAEA;AAAI,QAAA,IAAI,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAE,KAAKb,WAAlB;AAA+B,QAAA,SAAS,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoDW,eAAe,CAACG,OAApE,CADJ,EAEI;AAAI,QAAA,OAAO,EAAE,KAAKd,WAAlB;AAA+B,QAAA,SAAS,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDW,eAAe,CAACI,OAArE,CAFJ,EAGI;AAAI,QAAA,OAAO,EAAE,KAAKf,WAAlB;AAA+B,QAAA,SAAS,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDW,eAAe,CAACK,OAArE,CAHJ,EAII;AAAI,QAAA,OAAO,EAAE,KAAKhB,WAAlB;AAA+B,QAAA,SAAS,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDW,eAAe,CAACM,OAArE,CAJJ,CAFA,CADJ,EAWA;AACA,QAAA,OAAO,EAAE,KAAKnB,kBADd;AAEA,QAAA,QAAQ,EAAI,KAAKC,KAAL,CAAWO,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXA,CADJ;AAiBH,KAlBD,MAmBK;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAET,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAQ,QAAA,OAAO,EAAE,KAAKF,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,CADJ;AAMH;AACJ;;AAvG+B;AA0GpC,eAAenB,IAAf","sourcesContent":["import Dexie from 'dexie'\r\nimport React, { Component } from 'react'\r\nimport QuestionBox  from './QuestionBox'\r\nimport Scoresheet from './Scoresheet'\r\nimport \"./styles.css\"\r\n\r\n\r\nexport class Quiz extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            questionBank: [],\r\n            currentIndex: 0,\r\n            userAnswer: null,\r\n            score:0,\r\n            disabled: true,\r\n        }\r\n\r\n        this.checkAnswer = this.checkAnswer.bind(this)\r\n\r\n    }\r\n    \r\n\r\n\r\n    //Reads the question from IndexedDB and load them into the questionBank state\r\n    loadQuestions = () => {\r\n        let arr = [];\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.loadQuestions()\r\n    }\r\n\r\n    retakeQuiz = () => {\r\n        this.setState({\r\n            currentIndex: 0,\r\n            score:0\r\n        })\r\n    }\r\n\r\n\r\n    //Increment the currentIndex\r\n    nextQuestionHander = () => {\r\n        this.setState({\r\n            currentIndex:  this.state.currentIndex + 1,\r\n        })\r\n    }\r\n\r\n    //Increment score if answer is correct\r\n    //Enable Next button\r\n    checkAnswer = (event) =>{\r\n        console.log(event.target.innerHTML)\r\n        const {currentIndex, questionBank, score} = this.state\r\n        if(event.target.innerHTML === questionBank[currentIndex].answer){\r\n            this.setState({\r\n                score: score + 1\r\n            })\r\n        }\r\n\r\n        // this.setState({\r\n        //     //userAnswer: selectedAnswer,\r\n        //     disabled:false\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        const {currentIndex, questionBank, score, answered} = this.state\r\n        var currentQuestion = questionBank[currentIndex]\r\n\r\n        if(currentIndex <= questionBank.length -1) {\r\n            return (\r\n                <div>                    \r\n                    <div className=\"questionBox\" >\r\n                    <h1> {currentQuestion.question}</h1>\r\n                    <ol type='A'>\r\n                        <li onClick={this.checkAnswer} className=\"options\">{currentQuestion.option1}</li>\r\n                        <li onClick={this.checkAnswer} className=\"options \">{currentQuestion.option2}</li>\r\n                        <li onClick={this.checkAnswer} className=\"options \">{currentQuestion.option3}</li>\r\n                        <li onClick={this.checkAnswer} className=\"options \">{currentQuestion.option4}</li>\r\n                    </ol>  \r\n                    </div>\r\n                    \r\n                <button \r\n                onClick={this.nextQuestionHander} \r\n                disabled = {this.state.disabled}>Next</button>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                <Scoresheet score={score} ></Scoresheet>\r\n                <button onClick={this.retakeQuiz} >Retake Quiz</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n"]},"metadata":{},"sourceType":"module"}