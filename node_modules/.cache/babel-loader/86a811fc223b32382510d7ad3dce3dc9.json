{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\Form.js\";\nimport React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport './styles.css';\nimport db from './db';\nexport class Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      var inputName = event.target.name;\n\n      if (inputName === 'txtQuestion') {\n        this.setState({\n          question: event.target.value\n        });\n      } else if (inputName === 'txtOption1') {\n        this.setState({\n          option1: event.target.value\n        });\n      } else if (inputName === 'txtOption2') {\n        this.setState({\n          option2: event.target.value\n        });\n      } else if (inputName === 'txtOption3') {\n        this.setState({\n          option3: event.target.value\n        });\n      } else if (inputName === 'txtOption4') {\n        this.setState({\n          option4: event.target.value\n        });\n      } else if (inputName === 'txtAnswer') {\n        this.setState({\n          answer: event.target.value\n        });\n      }\n    };\n\n    this.insertData = event => {\n      const {\n        question,\n        option1,\n        option2,\n        option3,\n        option4,\n        answer\n      } = this.state;\n      event.preventDefault(); //Quick and dirty Required field validation. \n\n      if (question.length < 1 || option1.length < 1 || option2.length < 1 || option3.length < 1 || option4.length < 1 || answer.length < 1) {\n        alert(\"Check that no textfield is empty\");\n      } //Also answer must be one of the options\n      else if (option1 !== answer && option2 !== answer && option3 !== answer && option4 !== answer) {\n          alert(\"The answer must be one of the options\");\n        } else {\n          //Actually Insert the data into the database\n          db.questions.put({\n            id: uuid(),\n            question: this.state.question,\n            option1: this.state.option1,\n            option2: this.state.option2,\n            option3: this.state.option3,\n            option4: this.state.option4,\n            answer: this.state.answer\n          }).then(() => {\n            //Clear the textfields after insertion\n            this.setState({\n              question: '',\n              option1: '',\n              option2: '',\n              option3: '',\n              option4: '',\n              answer: ''\n            });\n          });\n        }\n    };\n\n    this.state = {\n      question: '',\n      option1: '',\n      option2: '',\n      option3: '',\n      option4: '',\n      answer: ''\n    };\n  } //Controlled form elements with React\n\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Enter Question: \"), React.createElement(\"input\", {\n      ref: \"q\",\n      name: \"txtQuestion\",\n      onChange: this.handleChange,\n      type: \"text\",\n      value: this.state.question,\n      size: \"70\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \"Answer Options\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Option 1: \"), React.createElement(\"input\", {\n      ref: \"o1\",\n      name: \"txtOption1\",\n      onChange: this.handleChange,\n      type: \"text\",\n      value: this.state.option1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Option 2: \"), React.createElement(\"input\", {\n      ref: \"o2\",\n      name: \"txtOption2\",\n      onChange: this.handleChange,\n      type: \"text\",\n      value: this.state.option2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Option 3: \"), React.createElement(\"input\", {\n      ref: \"o3\",\n      name: \"txtOption3\",\n      onChange: this.handleChange,\n      type: \"text\",\n      value: this.state.option3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Option 4: \"), React.createElement(\"input\", {\n      ref: \"o4\",\n      name: \"txtOption4\",\n      onChange: this.handleChange,\n      type: \"text\",\n      value: this.state.option4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Answer: \"), React.createElement(\"input\", {\n      name: \"txtAnswer\",\n      onChange: this.handleChange,\n      type: \"text\",\n      value: this.state.answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit Question\",\n      onClick: this.insertData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Form;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Form.js"],"names":["React","Component","uuid","db","Form","constructor","props","handleChange","event","inputName","target","name","setState","question","value","option1","option2","option3","option4","answer","insertData","state","preventDefault","length","alert","questions","put","id","then","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport './styles.css'\r\nimport db from './db'\r\n\r\n\r\nexport class Form extends Component {\r\n    constructor(props) {\r\n        super(props)    \r\n        this.state = {\r\n             question: '',\r\n             option1: '',\r\n             option2: '',\r\n             option3: '',\r\n             option4: '',\r\n             answer: ''        }\r\n    }\r\n\r\n    //Controlled form elements with React\r\n    handleChange = (event) => {\r\n        var inputName = event.target.name;\r\n        if(inputName === 'txtQuestion'){\r\n            this.setState({question: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption1') {\r\n            this.setState({option1: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption2') {\r\n            this.setState({option2: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption3') {\r\n            this.setState({option3: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption4') {\r\n            this.setState({option4: event.target.value})\r\n        }\r\n        else if(inputName === 'txtAnswer') {\r\n            this.setState({answer: event.target.value})\r\n        }\r\n    }\r\n\r\n    //Insert data into IndexedDB\r\n    insertData = (event) => {\r\n        const {question, option1, option2, option3, option4, answer} = this.state\r\n        event.preventDefault()\r\n         //Quick and dirty Required field validation. \r\n        if (question.length < 1 \r\n            || option1.length < 1 \r\n            || option2.length < 1 \r\n            || option3.length < 1 \r\n            || option4.length < 1 \r\n            || answer.length < 1\r\n            ) {\r\n            alert(\"Check that no textfield is empty\")\r\n        }\r\n        //Also answer must be one of the options\r\n        else if( option1 !== answer \r\n            && option2 !== answer\r\n            && option3 !== answer\r\n            && option4 !== answer\r\n        ){\r\n            alert(\"The answer must be one of the options\")\r\n        }\r\n        else {\r\n            //Actually Insert the data into the database\r\n            db.questions.put({\r\n                id: uuid(),\r\n                question: this.state.question, \r\n                option1: this.state.option1,\r\n                option2: this.state.option2,\r\n                option3: this.state.option3,\r\n                option4: this.state.option4,\r\n                answer: this.state.answer\r\n            })\r\n            .then(()=> {  \r\n                //Clear the textfields after insertion\r\n                this.setState({\r\n                    question: '',\r\n                    option1: '',\r\n                    option2: '',\r\n                    option3: '',\r\n                    option4: '',\r\n                    answer: ''\r\n                })  \r\n            })\r\n        }\r\n  };\r\n\r\n    render() {\r\n        return (           \r\n              <form>\r\n                <label>Enter Question: </label>\r\n                <input ref=\"q\" name=\"txtQuestion\" onChange={this.handleChange} type=\"text\" value={this.state.question} size=\"70\"></input>\r\n                <hr />\r\n                Answer Options\r\n                <p>\r\n                    <label>Option 1: </label>\r\n                    <input ref=\"o1\" name=\"txtOption1\" onChange={this.handleChange} type=\"text\" value={this.state.option1}></input>\r\n                </p>\r\n                <p>\r\n                    <label>Option 2: </label>\r\n                    <input ref=\"o2\" name=\"txtOption2\" onChange={this.handleChange} type=\"text\" value={this.state.option2}></input>\r\n                </p>\r\n                <p>\r\n                    <label>Option 3: </label>\r\n                    <input ref=\"o3\" name=\"txtOption3\" onChange={this.handleChange} type=\"text\" value={this.state.option3}></input>\r\n                </p>\r\n                <p>\r\n                    <label>Option 4: </label>\r\n                    <input ref=\"o4\" name=\"txtOption4\" onChange={this.handleChange} type=\"text\" value={this.state.option4}></input>\r\n                </p>  \r\n                <hr />\r\n                <p>\r\n                    <label>Answer: </label>\r\n                    <input name=\"txtAnswer\" onChange={this.handleChange} type=\"text\" value={this.state.answer}></input>\r\n                </p>  \r\n                <hr />                              \r\n                    <input type=\"submit\" className=\"button\" value=\"Submit Question\" onClick={this.insertData} ></input>                \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}