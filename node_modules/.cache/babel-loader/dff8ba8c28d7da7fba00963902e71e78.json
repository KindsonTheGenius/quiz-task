{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\Game.js\";\nimport React, { Component } from 'react';\nimport QuestionManager from './QuestionManager';\nimport Header from './Header';\nimport Quiz from './Quiz';\nimport Start from './Start';\nimport db from './db';\nexport class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfQuestions: 0,\n      //Number of question in the database\n      gotoQuestionManager: false,\n      //If user clicked on Question Manager button\n      gotoQuiz: false,\n      //If user clicked on Start Quiz Button\n      username: '',\n      //Username, set by props from Start component\n      goBack: false // if user clicked on exit button\n\n    };\n    this.manageQuestions = this.manageQuestions.bind(this);\n    this.startQuiz = this.startQuiz.bind(this);\n  } //Query the database to count the number of questions available\n\n\n  componentDidMount() {\n    let count = 0;\n    db.questions.each(item => count = count + 1).then(() => {\n      this.setState({\n        numberOfQuestions: count\n      });\n    });\n    this.setState({\n      username: this.props.username\n    });\n  } //User clicked on Question Manager button\n\n\n  manageQuestions() {\n    this.setState({\n      gotoQuestionManager: true\n    });\n  } //USer clicked on STart Quiz button\n\n\n  startQuiz() {\n    if (this.state.numberOfQuestions === 0) {\n      alert(\"You must add at least one question before you can start the quiz\"); //a little validation\n    } else {\n      this.setState({\n        gotoQuiz: true\n      });\n    }\n  }\n\n  render() {\n    if (this.state.gotoQuestionManager === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(QuestionManager, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    } else if (this.state.gotoQuiz === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Quiz, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    } else if (this.state.goBack === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Start, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Header, {\n      username: this.props.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Quiz Dashboard\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Number of questions in the database must be one or more before you can starte the quiz\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"To add a question, please click on the Manage Questions button\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Number of Question: \", this.state.numberOfQuestions, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.manageQuestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Manage Questions\"), React.createElement(\"button\", {\n      className: \"button green\",\n      onClick: this.startQuiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Start Quiz\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          username: '',\n          goBack: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Exit\")));\n  }\n\n}\nexport default Game;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Game.js"],"names":["React","Component","QuestionManager","Header","Quiz","Start","db","Game","constructor","props","state","numberOfQuestions","gotoQuestionManager","gotoQuiz","username","goBack","manageQuestions","bind","startQuiz","componentDidMount","count","questions","each","item","then","setState","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport QuestionManager from './QuestionManager'\r\nimport Header from './Header'\r\nimport Quiz from './Quiz'\r\nimport Start from './Start'\r\nimport db from './db'\r\n\r\n\r\n\r\nexport class Game extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)   \r\n        this.state = {\r\n             numberOfQuestions:0,        //Number of question in the database\r\n             gotoQuestionManager: false, //If user clicked on Question Manager button\r\n             gotoQuiz: false,            //If user clicked on Start Quiz Button\r\n             username: '',               //Username, set by props from Start component\r\n             goBack: false               // if user clicked on exit button\r\n        }\r\n        this.manageQuestions = this.manageQuestions.bind(this)\r\n        this.startQuiz = this.startQuiz.bind(this)\r\n    }\r\n\r\n    //Query the database to count the number of questions available\r\n    componentDidMount(){\r\n        let count = 0;\r\n        db.questions.each((item) => count = count+1)\r\n        .then(() => {\r\n            this.setState({numberOfQuestions: count})\r\n        });\r\n        this.setState({\r\n            username: this.props.username\r\n        })\r\n    }\r\n\r\n    //User clicked on Question Manager button\r\n    manageQuestions(){       \r\n        this.setState({\r\n            gotoQuestionManager: true\r\n        })\r\n    }\r\n\r\n    //USer clicked on STart Quiz button\r\n    startQuiz(){\r\n        if(this.state.numberOfQuestions === 0){\r\n            alert(\"You must add at least one question before you can start the quiz\") //a little validation\r\n        }\r\n        else{\r\n          this.setState({\r\n              gotoQuiz: true\r\n          })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.gotoQuestionManager === true){\r\n            return (\r\n                <div>\r\n                    <QuestionManager username={this.state.username}></QuestionManager>\r\n                </div>\r\n            )\r\n        }\r\n        else if(this.state.gotoQuiz === true){\r\n            return (\r\n                <div>\r\n                    <Quiz username={this.state.username}></Quiz>\r\n                </div>\r\n            )\r\n        }\r\n        else if(this.state.goBack ===true){\r\n            return(\r\n                <div>\r\n                    <Start></Start>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n              <Header username={this.props.username}></Header>\r\n                <div className=\"container\">\r\n                    <hr />\r\n                    <center>\r\n                        <h1>Quiz Dashboard</h1>\r\n                        <h4>Number of questions in the database must be one or more before you can starte the quiz</h4>\r\n                        <h5>To add a question, please click on the Manage Questions button</h5>\r\n                    </center>\r\n                    <hr />\r\n                    Number of Question: {this.state.numberOfQuestions}<br />\r\n                    <button className=\"button\" onClick={this.manageQuestions}>Manage Questions</button>\r\n                    <button className=\"button green\" onClick={this.startQuiz}>Start Quiz</button> <br />\r\n                    <button onClick={()=>{this.setState({username:'', goBack:true})}}>Exit</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game\r\n"]},"metadata":{},"sourceType":"module"}