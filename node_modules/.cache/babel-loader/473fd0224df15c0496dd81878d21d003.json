{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\QuestionManager.js\";\nimport Dexie from 'dexie';\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport './styles';\nexport class QuestionManager extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: []\n    };\n\n    this.loadQuestions = () => {\n      let arr = [];\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.each(item => arr.push(item)).then(() => this.setState({\n        questionBank: arr\n      }));\n    };\n\n    this.deleteQuestion = event => {\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      var clickedId = event.target.id;\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.delete(clickedId).then(() => {\n        this.loadQuestions();\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.username);\n  }\n\n  render() {\n    this.loadQuestions();\n    var list = this.state.questionBank.map(result => {\n      return React.createElement(\"div\", {\n        key: result.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, result.question, React.createElement(\"button\", {\n        id: result.id,\n        onClick: this.deleteQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), \"A. \", result.option1, \"; B. \", result.option2, \"; C. \", result.option3, \"; D. \", result.option4, \";\", React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, list, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default QuestionManager;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/QuestionManager.js"],"names":["Dexie","React","Component","Form","QuestionManager","state","questionBank","loadQuestions","arr","db","version","stores","questions","open","catch","console","log","each","item","push","then","setState","deleteQuestion","event","clickedId","target","id","delete","componentDidMount","props","username","render","list","map","result","question","option1","option2","option3","option4"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,UAAP;AAEA,OAAO,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAE3CG,KAF2C,GAEnC;AACJC,MAAAA,YAAY,EAAE;AADV,KAFmC;;AAAA,SAM3CC,aAN2C,GAM3B,MAAM;AAClB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,EAAE,GAAG,IAAIT,KAAJ,CAAU,aAAV,CAAT;AACAS,MAAAA,EAAE,CAACC,OAAH,CAAW,CAAX,EAAcC,MAAd,CAAqB;AACjBC,QAAAA,SAAS,EAAE;AADM,OAArB;AAIAH,MAAAA,EAAE,CAACI,IAAH,GAAUC,KAAV,CAAgB,YAAU;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAFD;AAIAP,MAAAA,EAAE,CAACG,SAAH,CAAaK,IAAb,CAAmBC,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAASD,IAAT,CAA5B,EACCE,IADD,CACM,MAAM,KAAKC,QAAL,CAAc;AAACf,QAAAA,YAAY,EAAEE;AAAf,OAAd,CADZ;AAEH,KAnB0C;;AAAA,SAqB3Cc,cArB2C,GAqBzBC,KAAD,IAAW;AACxB,UAAId,EAAE,GAAG,IAAIT,KAAJ,CAAU,aAAV,CAAT;AAEAS,MAAAA,EAAE,CAACC,OAAH,CAAW,CAAX,EAAcC,MAAd,CAAqB;AACjBC,QAAAA,SAAS,EAAE;AADM,OAArB;AAIA,UAAIY,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA7B;AAEAjB,MAAAA,EAAE,CAACI,IAAH,GAAUC,KAAV,CAAgB,YAAU;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAFD;AAIAP,MAAAA,EAAE,CAACG,SAAH,CAAae,MAAb,CAAoBH,SAApB,EAA+BJ,IAA/B,CAAoC,MAAK;AACrC,aAAKb,aAAL;AACH,OAFD;AAGH,KArC0C;AAAA;;AAuCzCqB,EAAAA,iBAAiB,GAAE;AACjBb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKa,KAAL,CAAWC,QAAvB;AACD;;AAEHC,EAAAA,MAAM,GAAG;AACL,SAAKxB,aAAL;AAEA,QAAIyB,IAAI,GAAG,KAAK3B,KAAL,CAAWC,YAAX,CAAwB2B,GAAxB,CAA4BC,MAAM,IAAG;AAC5C,aACI;AAAK,QAAA,GAAG,EAAEA,MAAM,CAACR,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBQ,MAAM,CAACC,QAA7B,EAAsC;AAAQ,QAAA,EAAE,EAAED,MAAM,CAACR,EAAnB;AAAuB,QAAA,OAAO,EAAE,KAAKJ,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC,EAA0G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1G,SACYY,MAAM,CAACE,OADnB,WAEYF,MAAM,CAACG,OAFnB,WAGYH,MAAM,CAACI,OAHnB,WAIYJ,MAAM,CAACK,OAJnB,OAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR,CADJ;AASH,KAVU,CAAX;AAaA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,IADL,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFF,CADJ;AAQH;;AAnE0C;AAsE/C,eAAe5B,eAAf","sourcesContent":["import Dexie from 'dexie'\r\n\r\nimport React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport './styles'\r\n\r\nexport class QuestionManager extends Component {\r\n\r\n    state = {\r\n        questionBank: []\r\n    }\r\n\r\n    loadQuestions = () => {\r\n        let arr = [];\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n    deleteQuestion = (event) => {\r\n        var db = new Dexie('questionsDB');\r\n\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n\r\n        var clickedId = event.target.id;\r\n\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.delete(clickedId).then(() =>{\r\n            this.loadQuestions();\r\n        });\r\n    }\r\n        \r\n      componentDidMount(){\r\n        console.log(this.props.username)\r\n      }\r\n\r\n    render() {\r\n        this.loadQuestions()\r\n\r\n        var list = this.state.questionBank.map(result =>{\r\n            return (\r\n                <div key={result.id}>{result.question}<button id={result.id} onClick={this.deleteQuestion}>Delete</button><br /> \r\n                        A. {result.option1}; \r\n                        B. {result.option2};  \r\n                        C. {result.option3};  \r\n                        D. {result.option4}; \r\n                        <hr />\r\n                </div>\r\n            )\r\n        });\r\n\r\n\r\n        return (\r\n            <div>                \r\n                {list}\r\n              <div className=\"container\">\r\n                  <Form />\r\n              </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionManager"]},"metadata":{},"sourceType":"module"}