{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\QuestionManager.js\";\nimport Dexie from 'dexie';\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport Start from './Start.js';\nimport './styles.css';\nexport class QuestionManager extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      cancel: false\n    };\n\n    this.loadQuestions = () => {\n      let arr = [];\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.each(item => arr.push(item)).then(() => this.setState({\n        questionBank: arr\n      }));\n    };\n\n    this.deleteQuestion = event => {\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      var clickedId = event.target.id;\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.delete(clickedId).then(() => {\n        this.loadQuestions();\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    this.loadQuestions();\n    var list = this.state.questionBank.map(result => {\n      return React.createElement(\"div\", {\n        className: \"questionItem\",\n        key: result.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, result.question), React.createElement(\"button\", {\n        id: result.id,\n        onClick: this.deleteQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \"A. \", result.option1, \"; B. \", result.option2, \"; C. \", result.option3, \"; D. \", result.option4, \";\", React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    });\n\n    if (this.state.cancel === true) {\n      return React.createElement(Game, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, list, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => {\n          this.setState({\n            cancel: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }\n\n}\nexport default QuestionManager;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/QuestionManager.js"],"names":["Dexie","React","Component","Form","Start","QuestionManager","state","questionBank","cancel","loadQuestions","arr","db","version","stores","questions","open","catch","console","log","each","item","push","then","setState","deleteQuestion","event","clickedId","target","id","delete","componentDidMount","render","list","map","result","question","option1","option2","option3","option4","username"],"mappings":"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","sourcesContent":["import Dexie from 'dexie'\r\n\r\nimport React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport Start from './Start.js'\r\nimport './styles.css'\r\n\r\nexport class QuestionManager extends Component {\r\n\r\n    state = {\r\n        questionBank: [],\r\n        cancel: false\r\n    }\r\n\r\n    loadQuestions = () => {\r\n        let arr = [];\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n    deleteQuestion = (event) => {\r\n        var db = new Dexie('questionsDB');\r\n\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n\r\n        var clickedId = event.target.id;\r\n\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.delete(clickedId).then(() =>{\r\n            this.loadQuestions();\r\n        });\r\n    }\r\n        \r\n      componentDidMount(){\r\n      }\r\n\r\n    render() {\r\n        this.loadQuestions()\r\n\r\n        var list = this.state.questionBank.map(result =>{\r\n            return (\r\n                <div className=\"questionItem\" key={result.id}><span>{result.question}</span><button id={result.id} onClick={this.deleteQuestion}>Delete</button><br /> \r\n                        A. {result.option1};\r\n                        B. {result.option2};  \r\n                        C. {result.option3};  \r\n                        D. {result.option4}; \r\n                        <hr />\r\n                </div>\r\n            )\r\n        });\r\n        if(this.state.cancel === true){\r\n            return (\r\n                <Game username={this.state.username}></Game>\r\n            )\r\n        }\r\n        else {\r\n        return (\r\n            <div>                \r\n                {list}\r\n              <div className=\"container\">\r\n                  <Form />\r\n                  <button onClick={() => { this.setState({cancel:true}) }}>Cancel</button>\r\n              </div> \r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default QuestionManager"]},"metadata":{},"sourceType":"module"}