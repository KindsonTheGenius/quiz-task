{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\Quiz.js\";\nimport Dexie from 'dexie';\nimport React, { Component } from 'react';\nimport Scoresheet from './Scoresheet';\nimport \"./styles.css\";\nimport Header from './Header';\nexport class Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuestions = () => {\n      let arr = [];\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.each(item => arr.push(item)).then(() => this.setState({\n        questionBank: arr\n      }));\n    };\n\n    this.nextQuestionHander = () => {\n      this.setState({\n        currentIndex: this.state.currentIndex + 1,\n        disabled: true,\n        disabledOptions: false,\n        disabledCheck: true,\n        option1: false,\n        option2: false,\n        option3: false,\n        option4: false,\n        correctAnswer: '',\n        userAnswer: ''\n      });\n    };\n\n    this.checkAnswer = () => {\n      const {\n        score,\n        userAnswer,\n        questionBank,\n        currentIndex\n      } = this.state;\n\n      if (this.answerIsCorrect(userAnswer)) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        disabledOptions: true,\n        disabled: false,\n        correctAnswer: questionBank[currentIndex].answer\n      });\n    };\n\n    this.setUserAnswer = event => {\n      if (event.target.id === \"o1\") {\n        this.setState({\n          option1: event.target.checked,\n          userAnswer: event.target.value\n        });\n      } else if (event.target.id === \"o2\") {\n        this.setState({\n          option2: event.target.checked,\n          userAnswer: event.target.value\n        });\n      } else if (event.target.id === \"o3\") {\n        this.setState({\n          option3: event.target.checked,\n          userAnswer: event.target.value\n        });\n      } else if (event.target.id === \"o4\") {\n        this.setState({\n          option4: event.target.checked,\n          userAnswer: event.target.value\n        });\n      }\n\n      this.setState({\n        disabledCheck: false\n      });\n    };\n\n    this.state = {\n      questionBank: [],\n      currentIndex: 0,\n      userAnswer: null,\n      score: 0,\n      disabled: true,\n      //Enable or disable Next Button\n      disabledOptions: false,\n      //Enable or disable Answer Options\n      option1: false,\n      //Radio button all initially not checked, so set to false initially\n      option2: false,\n      option3: false,\n      option4: false,\n      endQuiz: false,\n      //Checks if the quiz have ended (Current index gotten to the last)\n      disabledCheck: true //Enable or disable Check Answer button\n\n    }; //Bind this keyword\n\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.answerIsCorrect = this.answerIsCorrect.bind(this);\n  } //Reads the question from IndexedDB and load them into the questionBank\n\n\n  //Load the question from indexedDB when component mounts\n  componentDidMount() {\n    this.loadQuestions();\n  } //Increment the currentIndex when next button is clicked\n\n\n  //Check if UserAnser is correct \n  answerIsCorrect(userAnswer) {\n    const {\n      currentIndex,\n      questionBank\n    } = this.state;\n\n    if (userAnswer === questionBank[currentIndex].answer) {\n      return true;\n    } else {\n      return false;\n    }\n  } //Increment score if answer is correct and enable Next Button\n\n\n  render() {\n    const {\n      currentIndex,\n      endQuiz,\n      questionBank,\n      score,\n      userAnswer,\n      correctAnswer\n    } = this.state;\n    var currentQuestion = questionBank[currentIndex];\n\n    if (currentIndex <= questionBank.length - 1 && endQuiz === false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.props.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \" \", currentQuestion.question), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Question \", currentIndex + 1, \" of \", questionBank.length, \" \"), React.createElement(\"fieldset\", {\n        disabled: this.state.disabledOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"o1\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option1,\n        checked: this.state.option1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), \" \", currentQuestion.option1), React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"o2\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option2,\n        checked: this.state.option2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), \" \", currentQuestion.option2), React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"o3\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option3,\n        checked: this.state.option3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), \" \", currentQuestion.option3), React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"o4\",\n        onChange: this.setUserAnswer,\n        type: \"radio\",\n        name: \"group1\",\n        value: currentQuestion.option4,\n        checked: this.state.option4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), \" \", currentQuestion.option4)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.checkAnswer,\n        disabled: this.state.disabledCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Check Answer\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Your answer: \", userAnswer, \" \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"   Correct answer: \", correctAnswer)), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.nextQuestionHander,\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Next\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => {\n          this.setState({\n            endQuiz: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"End Quiz Now\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })));\n    } else {\n      //Quiz have ended so, we load the Scoresheet component\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Scoresheet, {\n        username: this.props.username,\n        score: score,\n        totalQuestions: questionBank.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\nexport default Quiz;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Quiz.js"],"names":["Dexie","React","Component","Scoresheet","Header","Quiz","constructor","props","loadQuestions","arr","db","version","stores","questions","open","catch","console","log","each","item","push","then","setState","questionBank","nextQuestionHander","currentIndex","state","disabled","disabledOptions","disabledCheck","option1","option2","option3","option4","correctAnswer","userAnswer","checkAnswer","score","answerIsCorrect","answer","setUserAnswer","event","target","id","checked","value","endQuiz","bind","componentDidMount","render","currentQuestion","length","username","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAEhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuBnBC,aAvBmB,GAuBH,MAAM;AAClB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,EAAE,GAAG,IAAIV,KAAJ,CAAU,aAAV,CAAT;AACAU,MAAAA,EAAE,CAACC,OAAH,CAAW,CAAX,EAAcC,MAAd,CAAqB;AACjBC,QAAAA,SAAS,EAAE;AADM,OAArB;AAGAH,MAAAA,EAAE,CAACI,IAAH,GAAUC,KAAV,CAAgB,YAAU;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAFD;AAGAP,MAAAA,EAAE,CAACG,SAAH,CAAaK,IAAb,CAAmBC,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAASD,IAAT,CAA5B,EACCE,IADD,CACM,MAAM,KAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAEd;AAAf,OAAd,CADZ;AAEH,KAlCkB;;AAAA,SA2CnBe,kBA3CmB,GA2CE,MAAM;AACvB,WAAKF,QAAL,CAAc;AACVG,QAAAA,YAAY,EAAG,KAAKC,KAAL,CAAWD,YAAX,GAA0B,CAD/B;AAEVE,QAAAA,QAAQ,EAAC,IAFC;AAGVC,QAAAA,eAAe,EAAE,KAHP;AAIVC,QAAAA,aAAa,EAAE,IAJL;AAKVC,QAAAA,OAAO,EAAE,KALC;AAMVC,QAAAA,OAAO,EAAE,KANC;AAOVC,QAAAA,OAAO,EAAE,KAPC;AAQVC,QAAAA,OAAO,EAAE,KARC;AASVC,QAAAA,aAAa,EAAE,EATL;AAUVC,QAAAA,UAAU,EAAE;AAVF,OAAd;AAYH,KAxDkB;;AAAA,SAmEnBC,WAnEmB,GAmEL,MAAK;AACf,YAAM;AAACC,QAAAA,KAAD;AAAQF,QAAAA,UAAR;AAAoBZ,QAAAA,YAApB;AAAkCE,QAAAA;AAAlC,UAAkD,KAAKC,KAA7D;;AACI,UAAG,KAAKY,eAAL,CAAqBH,UAArB,CAAH,EAAoC;AAChC,aAAKb,QAAL,CAAc;AACVe,UAAAA,KAAK,EAAEA,KAAK,GAAG;AADL,SAAd;AAGH;;AACD,WAAKf,QAAL,CAAc;AACVM,QAAAA,eAAe,EAAC,IADN;AAEVD,QAAAA,QAAQ,EAAE,KAFA;AAGVO,QAAAA,aAAa,EAAEX,YAAY,CAACE,YAAD,CAAZ,CAA2Bc;AAHhC,OAAd;AAKP,KA/EkB;;AAAA,SAkFnBC,aAlFmB,GAkFFC,KAAD,IAAW;AACvB,UAAGA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,IAAvB,EAA6B;AACzB,aAAKrB,QAAL,CAAc;AAACQ,UAAAA,OAAO,EAAEW,KAAK,CAACC,MAAN,CAAaE,OAAvB;AAAgCT,UAAAA,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaG;AAAzD,SAAd;AACH,OAFD,MAGK,IAAGJ,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAmB,IAAtB,EAA4B;AAC7B,aAAKrB,QAAL,CAAc;AAACS,UAAAA,OAAO,EAAEU,KAAK,CAACC,MAAN,CAAaE,OAAvB;AAAgCT,UAAAA,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaG;AAAzD,SAAd;AACH,OAFI,MAGA,IAAGJ,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAmB,IAAtB,EAA4B;AAC7B,aAAKrB,QAAL,CAAc;AAACU,UAAAA,OAAO,EAAES,KAAK,CAACC,MAAN,CAAaE,OAAvB;AAAgCT,UAAAA,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaG;AAAzD,SAAd;AACH,OAFI,MAGA,IAAGJ,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAmB,IAAtB,EAA4B;AAC7B,aAAKrB,QAAL,CAAc;AAACW,UAAAA,OAAO,EAAEQ,KAAK,CAACC,MAAN,CAAaE,OAAvB;AAAgCT,UAAAA,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaG;AAAzD,SAAd;AACH;;AACD,WAAKvB,QAAL,CAAc;AAACO,QAAAA,aAAa,EAAC;AAAf,OAAd;AACH,KAhGkB;;AAEf,SAAKH,KAAL,GAAa;AACTH,MAAAA,YAAY,EAAE,EADL;AAETE,MAAAA,YAAY,EAAE,CAFL;AAGTU,MAAAA,UAAU,EAAE,IAHH;AAITE,MAAAA,KAAK,EAAC,CAJG;AAKTV,MAAAA,QAAQ,EAAE,IALD;AAKO;AAChBC,MAAAA,eAAe,EAAE,KANR;AAMe;AACxBE,MAAAA,OAAO,EAAE,KAPA;AAOO;AAChBC,MAAAA,OAAO,EAAE,KARA;AASTC,MAAAA,OAAO,EAAE,KATA;AAUTC,MAAAA,OAAO,EAAE,KAVA;AAWTa,MAAAA,OAAO,EAAE,KAXA;AAWO;AAChBjB,MAAAA,aAAa,EAAC,IAZL,CAYU;;AAZV,KAAb,CAFe,CAiBf;;AACA,SAAKO,WAAL,GAAmB,KAAKA,WAAL,CAAiBW,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKT,eAAL,GAAuB,KAAKA,eAAL,CAAqBS,IAArB,CAA0B,IAA1B,CAAvB;AACH,GAtB+B,CAwBhC;;;AAcA;AACAC,EAAAA,iBAAiB,GAAE;AACf,SAAKxC,aAAL;AAEH,GA1C+B,CA4ChC;;;AAgBA;AACA8B,EAAAA,eAAe,CAACH,UAAD,EAAY;AACvB,UAAM;AAACV,MAAAA,YAAD;AAAeF,MAAAA;AAAf,QAA+B,KAAKG,KAA1C;;AACA,QAAGS,UAAU,KAAKZ,YAAY,CAACE,YAAD,CAAZ,CAA2Bc,MAA7C,EAAqD;AACjD,aAAO,IAAP;AACH,KAFD,MAEO;AAAC,aAAO,KAAP;AAAa;AACxB,GAlE+B,CAoEhC;;;AAgCAU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACxB,MAAAA,YAAD;AAAgBqB,MAAAA,OAAhB;AAAyBvB,MAAAA,YAAzB;AAAuCc,MAAAA,KAAvC;AAA8CF,MAAAA,UAA9C;AAA0DD,MAAAA;AAA1D,QAA2E,KAAKR,KAAtF;AACA,QAAIwB,eAAe,GAAG3B,YAAY,CAACE,YAAD,CAAlC;;AAEA,QAAIA,YAAY,IAAIF,YAAY,CAAC4B,MAAb,GAAqB,CAAtC,IAA6CL,OAAO,KAAK,KAA5D,EAAoE;AAChE,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAW6C,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMF,eAAe,CAACG,QAAtB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAc5B,YAAY,GAAG,CAA7B,UAAoCF,YAAY,CAAC4B,MAAjD,MAHJ,EAII;AAAU,QAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWE,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB;AAAO,QAAA,EAAE,EAAC,IAAV;AAAe,QAAA,QAAQ,EAAE,KAAKY,aAA9B;AAA6C,QAAA,IAAI,EAAC,OAAlD;AAA0D,QAAA,IAAI,EAAC,QAA/D;AAAwE,QAAA,KAAK,EAAEU,eAAe,CAACpB,OAA/F;AAAwG,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI,OAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,OAAiKoB,eAAe,CAACpB,OAAjL,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB;AAAO,QAAA,EAAE,EAAC,IAAV;AAAe,QAAA,QAAQ,EAAE,KAAKU,aAA9B;AAA6C,QAAA,IAAI,EAAC,OAAlD;AAA0D,QAAA,IAAI,EAAC,QAA/D;AAAwE,QAAA,KAAK,EAAEU,eAAe,CAACnB,OAA/F;AAAwG,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK,OAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,OAAiKmB,eAAe,CAACnB,OAAjL,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB;AAAO,QAAA,EAAE,EAAC,IAAV;AAAe,QAAA,QAAQ,EAAE,KAAKS,aAA9B;AAA6C,QAAA,IAAI,EAAC,OAAlD;AAA0D,QAAA,IAAI,EAAC,QAA/D;AAAwE,QAAA,KAAK,EAAEU,eAAe,CAAClB,OAA/F;AAAwG,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWM,OAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,OAAiKkB,eAAe,CAAClB,OAAjL,CAHJ,EAII;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB;AAAO,QAAA,EAAE,EAAC,IAAV;AAAe,QAAA,QAAQ,EAAE,KAAKQ,aAA9B;AAA6C,QAAA,IAAI,EAAC,OAAlD;AAA0D,QAAA,IAAI,EAAC,QAA/D;AAAwE,QAAA,KAAK,EAAEU,eAAe,CAACjB,OAA/F;AAAwG,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWO,OAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,OAAiKiB,eAAe,CAACjB,OAAjL,CAJJ,CAJJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKG,WAAtB;AAAmC,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWG,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoBM,UAApB,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA0BD,aAA1B,CAHJ,CAXJ,EAgBI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKV,kBAAzC;AAA6D,QAAA,QAAQ,EAAI,KAAKE,KAAL,CAAWC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,CAHA,EAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ;AAAQ,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKL,QAAL,CAAc;AAACwB,YAAAA,OAAO,EAAC;AAAT,WAAd;AAA8B,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CArBA,CADJ;AA4BH,KA7BD,MA8BK;AAAE;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAW6C,QAAjC;AAA2C,QAAA,KAAK,EAAEf,KAAlD;AAAyD,QAAA,cAAc,EAAEd,YAAY,CAAC4B,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;AACJ;;AA9I+B;AAiJpC,eAAe9C,IAAf","sourcesContent":["import Dexie from 'dexie'\r\nimport React, { Component } from 'react'\r\nimport Scoresheet from './Scoresheet'\r\nimport \"./styles.css\"\r\nimport Header from './Header'\r\n\r\nexport class Quiz extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)   \r\n        this.state = {\r\n            questionBank: [],\r\n            currentIndex: 0,\r\n            userAnswer: null,\r\n            score:0,\r\n            disabled: true, //Enable or disable Next Button\r\n            disabledOptions: false, //Enable or disable Answer Options\r\n            option1: false, //Radio button all initially not checked, so set to false initially\r\n            option2: false,\r\n            option3: false,\r\n            option4: false,\r\n            endQuiz: false, //Checks if the quiz have ended (Current index gotten to the last)\r\n            disabledCheck:true //Enable or disable Check Answer button\r\n        }\r\n\r\n        //Bind this keyword\r\n        this.checkAnswer = this.checkAnswer.bind(this)\r\n        this.answerIsCorrect = this.answerIsCorrect.bind(this)\r\n    }\r\n    \r\n    //Reads the question from IndexedDB and load them into the questionBank\r\n    loadQuestions = () => {\r\n        let arr = [];\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n        db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n    //Load the question from indexedDB when component mounts\r\n    componentDidMount(){\r\n        this.loadQuestions()\r\n        \r\n    }\r\n\r\n    //Increment the currentIndex when next button is clicked\r\n    nextQuestionHander = () => {\r\n        this.setState({\r\n            currentIndex:  this.state.currentIndex + 1,\r\n            disabled:true,\r\n            disabledOptions: false,\r\n            disabledCheck: true,\r\n            option1: false,\r\n            option2: false,\r\n            option3: false,\r\n            option4: false,\r\n            correctAnswer: '',\r\n            userAnswer: ''\r\n        })\r\n    }\r\n\r\n    //Check if UserAnser is correct \r\n    answerIsCorrect(userAnswer){\r\n        const {currentIndex, questionBank} = this.state\r\n        if(userAnswer === questionBank[currentIndex].answer) {\r\n            return true\r\n        } else {return false}\r\n    }\r\n\r\n    //Increment score if answer is correct and enable Next Button\r\n    checkAnswer = () =>{\r\n        const {score, userAnswer, questionBank, currentIndex} = this.state\r\n            if(this.answerIsCorrect(userAnswer)){\r\n                this.setState({\r\n                    score: score + 1\r\n                })\r\n            }\r\n            this.setState({\r\n                disabledOptions:true,\r\n                disabled: false,\r\n                correctAnswer: questionBank[currentIndex].answer\r\n            })\r\n    }\r\n    \r\n    //Set the User answer depending on which option the user clicked\r\n    setUserAnswer = (event) => {\r\n        if(event.target.id === \"o1\") { \r\n            this.setState({option1: event.target.checked, userAnswer: event.target.value })       \r\n        }\r\n        else if(event.target.id ===\"o2\") {\r\n            this.setState({option2: event.target.checked, userAnswer: event.target.value })\r\n        }\r\n        else if(event.target.id ===\"o3\") {\r\n            this.setState({option3: event.target.checked, userAnswer: event.target.value })\r\n        }\r\n        else if(event.target.id ===\"o4\") {\r\n            this.setState({option4: event.target.checked, userAnswer: event.target.value })\r\n        }\r\n        this.setState({disabledCheck:false})\r\n    }\r\n\r\n    render() {       \r\n        const {currentIndex,  endQuiz, questionBank, score, userAnswer, correctAnswer} = this.state\r\n        var currentQuestion = questionBank[currentIndex]    \r\n\r\n        if((currentIndex <= questionBank.length -1) && (endQuiz === false)) {\r\n            return (\r\n                <div>\r\n                <Header username={this.props.username}></Header>\r\n\r\n                <div className=\"container\">                    \r\n                 \r\n                    <h2> {currentQuestion.question}</h2>\r\n                    <h4>Question {currentIndex + 1} of {questionBank.length} </h4>\r\n                    <fieldset disabled={this.state.disabledOptions}>\r\n                        <div className=\"options\"><input id=\"o1\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option1} checked={this.state.option1}/> {currentQuestion.option1}</div>\r\n                        <div className=\"options\"><input id=\"o2\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option2} checked={this.state.option2}/> {currentQuestion.option2}</div>\r\n                        <div className=\"options\"><input id=\"o3\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option3} checked={this.state.option3}/> {currentQuestion.option3}</div>\r\n                        <div className=\"options\"><input id=\"o4\" onChange={this.setUserAnswer} type=\"radio\" name=\"group1\" value={currentQuestion.option4} checked={this.state.option4}/> {currentQuestion.option4}</div>\r\n                    </fieldset> \r\n\r\n                    <div>\r\n                        <button onClick={this.checkAnswer} disabled={this.state.disabledCheck}>Check Answer</button>   \r\n                        <span>Your answer: {userAnswer} </span>\r\n                        <span>   Correct answer: {correctAnswer}</span>\r\n                    </div>\r\n                    <button className=\"button\" onClick={this.nextQuestionHander} disabled = {this.state.disabled}>Next</button>                          \r\n                </div >\r\n                <div> \r\n                    <center><button onClick={()=>{this.setState({endQuiz:true})}} >End Quiz Now</button></center>\r\n                    <br></br>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n        else { //Quiz have ended so, we load the Scoresheet component\r\n            return (\r\n                <div >\r\n                    <Scoresheet username={this.props.username} score={score} totalQuestions={questionBank.length} />\r\n                    <br />               \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n"]},"metadata":{},"sourceType":"module"}