{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\QuestionManager.js\";\nimport Dexie from 'dexie';\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport Game from './Game.js';\nimport './styles.css';\nimport Header from './Header';\nexport class QuestionManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuestions = () => {\n      const db = this.state;\n      console.log(db);\n      let arr = [];\n      db.questions.each(item => arr.push(item)).then(() => this.setState({\n        questionBank: arr\n      }));\n    };\n\n    this.deleteQuestion = event => {\n      const db = this.state;\n      var clickedId = event.target.id; //id of the delete button holds the key for delete operation\n\n      db.questions.delete(clickedId).then(() => {\n        this.loadQuestions();\n      });\n    };\n\n    this.state = {\n      questionBank: [],\n      cancel: false,\n      db: null\n    }; //Initialize the database\n\n    var _db = new Dexie('questionsDB');\n\n    _db.version(2).stores({\n      questions: 'id,question, option1, option2, option3, option4, answer'\n    });\n\n    _db.open().catch(function () {\n      console.log(\"Error Occurred\");\n    });\n  } //Load the question from IndexedDB\n\n\n  render() {\n    this.loadQuestions(); //Display the list of questions\n\n    var list = this.state.questionBank.map(result => {\n      return React.createElement(\"div\", {\n        className: \"questionItem\",\n        key: result.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, result.question), React.createElement(\"button\", {\n        id: result.id,\n        onClick: this.deleteQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), \"A. \", result.option1, \"; B. \", result.option2, \"; C. \", result.option3, \"; D. \", result.option4, \";\", React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    });\n\n    if (this.state.cancel === true) {\n      //User want to exit the question Manager\n      return React.createElement(Game, {\n        username: this.props.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    } else {\n      //Form displays below the list\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.props.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Available Questions\")), list, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Enter new question using the form below\")), React.createElement(\"div\", {\n        className: \"container small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => {\n          this.setState({\n            cancel: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }\n\n}\nexport default QuestionManager;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/QuestionManager.js"],"names":["Dexie","React","Component","Form","Game","Header","QuestionManager","constructor","props","loadQuestions","db","state","console","log","arr","questions","each","item","push","then","setState","questionBank","deleteQuestion","event","clickedId","target","id","delete","cancel","version","stores","open","catch","render","list","map","result","question","option1","option2","option3","option4","username"],"mappings":"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","sourcesContent":["import Dexie from 'dexie'\r\n\r\nimport React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport Game from './Game.js'\r\nimport './styles.css'\r\nimport Header from './Header'\r\n\r\nexport class QuestionManager extends Component {\r\n\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        questionBank: [],\r\n        cancel: false,\r\n        db: null\r\n    }\r\n    //Initialize the database\r\n    var db = new Dexie('questionsDB');\r\n    db.version(2).stores({\r\n        questions: 'id,question, option1, option2, option3, option4, answer'\r\n    });\r\n    db.open().catch(function(){\r\n        console.log(\"Error Occurred\")\r\n    });\r\n}\r\n\r\n    //Load the question from IndexedDB\r\n    loadQuestions = () => {\r\n        const db = this.state\r\n        console.log(db)\r\n        let arr = [];\r\n          db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n\r\n    //Function to Delete Question based on the key\r\n    deleteQuestion = (event) => {\r\n        const db = this.state\r\n        var clickedId = event.target.id; //id of the delete button holds the key for delete operation\r\n        db.questions.delete(clickedId).then(() =>{\r\n            this.loadQuestions();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.loadQuestions()\r\n        //Display the list of questions\r\n        var list = this.state.questionBank.map(result =>{\r\n            return (\r\n                <div className=\"questionItem\" key={result.id}><span>{result.question}</span><button id={result.id} onClick={this.deleteQuestion}>Delete</button><br /> \r\n                        A. {result.option1};\r\n                        B. {result.option2};  \r\n                        C. {result.option3};  \r\n                        D. {result.option4}; \r\n                        <hr />\r\n                </div>\r\n            )\r\n        });\r\n        if(this.state.cancel === true){ //User want to exit the question Manager\r\n            return (\r\n                <Game username={this.props.username}></Game>\r\n            )\r\n        }\r\n        else {\r\n            //Form displays below the list\r\n        return (\r\n            <div>   \r\n                <Header username={this.props.username} />  \r\n                <center><h3>Available Questions</h3></center>           \r\n                {list}\r\n                <center><h3>Enter new question using the form below</h3></center>\r\n                <div className=\"container small\">\r\n                  <Form />\r\n                  <button onClick={() => { this.setState({cancel:true}) }}>Cancel</button>\r\n              </div> \r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\nexport default QuestionManager"]},"metadata":{},"sourceType":"module"}