{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\storage-app\\\\src\\\\Game.js\";\nimport React, { Component } from 'react';\nimport Dexie from 'dexie';\nexport class Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.noQuestionAvailable = () => {\n      let count = 0;\n      var db = new Dexie('questionsDB');\n      db.version(2).stores({\n        questions: 'id,question, option1, option2, option3, option4, answer'\n      });\n      db.open().catch(function () {\n        console.log(\"Error Occurred: \");\n      });\n      db.questions.each(() => {\n        count = count + 1;\n        this.setState({\n          numberOfQuestions: this.state.numberOfQuestions + 1\n        });\n        console.log(count);\n      });\n      console.log(\"Final count \" + count);\n    };\n\n    this.state = {\n      numberOfQuestions: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.noQuestionAvailable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Check\"));\n  }\n\n}\nexport default Game;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Game.js"],"names":["React","Component","Dexie","Game","constructor","props","noQuestionAvailable","count","db","version","stores","questions","open","catch","console","log","each","setState","numberOfQuestions","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAEhCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,mBATmB,GASE,MAAM;AACvB,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,EAAE,GAAG,IAAIN,KAAJ,CAAU,aAAV,CAAT;AACAM,MAAAA,EAAE,CAACC,OAAH,CAAW,CAAX,EAAcC,MAAd,CAAqB;AACjBC,QAAAA,SAAS,EAAE;AADM,OAArB;AAGAH,MAAAA,EAAE,CAACI,IAAH,GAAUC,KAAV,CAAgB,YAAU;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAFD;AAIAP,MAAAA,EAAE,CAACG,SAAH,CAAaK,IAAb,CAAkB,MAAM;AACpBT,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACA,aAAKU,QAAL,CAAc;AAACC,UAAAA,iBAAiB,EAAE,KAAKC,KAAL,CAAWD,iBAAX,GAA+B;AAAnD,SAAd;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,OAJD;AAMAO,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBR,KAA7B;AAEH,KA3BkB;;AAGf,SAAKY,KAAL,GAAa;AACRD,MAAAA,iBAAiB,EAAC;AADV,KAAb;AAGH;;AAwBDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAG,KAAKd,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAKH;;AAtC+B;AAyCpC,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Dexie from 'dexie'\r\n\r\nexport class Game extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             numberOfQuestions:0\r\n        }\r\n    }\r\n    \r\n\r\n    noQuestionAvailable =() => {\r\n        let count = 0;\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred: \")\r\n        });\r\n\r\n        db.questions.each(() => {\r\n            count = count + 1\r\n            this.setState({numberOfQuestions: this.state.numberOfQuestions + 1})\r\n            console.log(count)\r\n        })\r\n\r\n        console.log(\"Final count \" + count)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick ={this.noQuestionAvailable}>Check</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game\r\n"]},"metadata":{},"sourceType":"module"}