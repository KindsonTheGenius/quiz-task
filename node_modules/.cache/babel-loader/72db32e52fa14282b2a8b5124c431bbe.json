{"ast":null,"code":"import _classCallCheck from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import uuid from'react-uuid';import'./styles.css';import db from'./db';export var Form=/*#__PURE__*/function(_Component){_inherits(Form,_Component);function Form(props){var _this;_classCallCheck(this,Form);_this=_possibleConstructorReturn(this,_getPrototypeOf(Form).call(this,props));_this.handleChange=function(event){var inputName=event.target.name;if(inputName==='txtQuestion'){_this.setState({question:event.target.value});}else if(inputName==='txtOption1'){_this.setState({option1:event.target.value});}else if(inputName==='txtOption2'){_this.setState({option2:event.target.value});}else if(inputName==='txtOption3'){_this.setState({option3:event.target.value});}else if(inputName==='txtOption4'){_this.setState({option4:event.target.value});}else if(inputName==='txtAnswer'){_this.setState({answer:event.target.value});}};_this.insertData=function(event){var _this$state=_this.state,question=_this$state.question,option1=_this$state.option1,option2=_this$state.option2,option3=_this$state.option3,option4=_this$state.option4,answer=_this$state.answer;event.preventDefault();//Quick and dirty Required field validation. Also answer must be one of the options\nif(question.length<1||option1.length<1||option2.length<1||option3.length<1||option4.length<1||answer.length<1){alert(\"Check that no textfield is empty\");}else if(option1!==answer&&option2!==answer&&option3!==answer&&option4!==answer){alert(\"The answer must be one of the options\");}else{//Actually Insert the data into the database\ndb.questions.put({id:uuid(),question:_this.state.question,option1:_this.state.option1,option2:_this.state.option2,option3:_this.state.option3,option4:_this.state.option4,answer:_this.state.answer}).then(function(){//Clear the textfields after insertion\n_this.setState({question:'',option1:'',option2:'',option3:'',option4:'',answer:''});});}};_this.state={question:'',option1:'',option2:'',option3:'',option4:'',answer:''};return _this;}//Controlled form elements with React\n_createClass(Form,[{key:\"render\",value:function render(){return React.createElement(\"form\",null,React.createElement(\"label\",null,\"Enter Question: \"),React.createElement(\"input\",{ref:\"q\",name:\"txtQuestion\",onChange:this.handleChange,type:\"text\",value:this.state.question,size:\"70\"}),React.createElement(\"hr\",null),\"Answer Options\",React.createElement(\"p\",null,React.createElement(\"label\",null,\"Option 1: \"),React.createElement(\"input\",{ref:\"o1\",name:\"txtOption1\",onChange:this.handleChange,type:\"text\",value:this.state.option1})),React.createElement(\"p\",null,React.createElement(\"label\",null,\"Option 2: \"),React.createElement(\"input\",{ref:\"o2\",name:\"txtOption2\",onChange:this.handleChange,type:\"text\",value:this.state.option2})),React.createElement(\"p\",null,React.createElement(\"label\",null,\"Option 3: \"),React.createElement(\"input\",{ref:\"o3\",name:\"txtOption3\",onChange:this.handleChange,type:\"text\",value:this.state.option3})),React.createElement(\"p\",null,React.createElement(\"label\",null,\"Option 4: \"),React.createElement(\"input\",{ref:\"o4\",name:\"txtOption4\",onChange:this.handleChange,type:\"text\",value:this.state.option4})),React.createElement(\"hr\",null),React.createElement(\"p\",null,React.createElement(\"label\",null,\"Answer: \"),React.createElement(\"input\",{name:\"txtAnswer\",onChange:this.handleChange,type:\"text\",value:this.state.answer})),React.createElement(\"hr\",null),React.createElement(\"input\",{type:\"submit\",className:\"button\",value:\"Submit Question\",onClick:this.insertData}));}}]);return Form;}(Component);export default Form;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/Form.js"],"names":["React","Component","uuid","db","Form","props","handleChange","event","inputName","target","name","setState","question","value","option1","option2","option3","option4","answer","insertData","state","preventDefault","length","alert","questions","put","id","then"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport './styles.css'\r\nimport db from './db'\r\n\r\n\r\nexport class Form extends Component {\r\n    constructor(props) {\r\n        super(props)    \r\n        this.state = {\r\n             question: '',\r\n             option1: '',\r\n             option2: '',\r\n             option3: '',\r\n             option4: '',\r\n             answer: ''        }\r\n    }\r\n\r\n    //Controlled form elements with React\r\n    handleChange = (event) => {\r\n        var inputName = event.target.name;\r\n        if(inputName === 'txtQuestion'){\r\n            this.setState({question: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption1') {\r\n            this.setState({option1: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption2') {\r\n            this.setState({option2: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption3') {\r\n            this.setState({option3: event.target.value})\r\n        }\r\n        else if(inputName === 'txtOption4') {\r\n            this.setState({option4: event.target.value})\r\n        }\r\n        else if(inputName === 'txtAnswer') {\r\n            this.setState({answer: event.target.value})\r\n        }\r\n    }\r\n\r\n    //Insert data into IndexedDB\r\n    insertData = (event) => {\r\n        const {question, option1, option2, option3, option4, answer} = this.state\r\n        event.preventDefault()\r\n         //Quick and dirty Required field validation. Also answer must be one of the options\r\n        if (question.length < 1 \r\n            || option1.length < 1 \r\n            || option2.length < 1 \r\n            || option3.length < 1 \r\n            || option4.length < 1 \r\n            || answer.length < 1\r\n            ) {\r\n            alert(\"Check that no textfield is empty\")\r\n        }\r\n        else if( option1 !== answer \r\n            && option2 !== answer\r\n            && option3 !== answer\r\n            && option4 !== answer\r\n        ){\r\n            alert(\"The answer must be one of the options\")\r\n        }\r\n        else {\r\n            //Actually Insert the data into the database\r\n            db.questions.put({\r\n                id: uuid(),\r\n                question: this.state.question, \r\n                option1: this.state.option1,\r\n                option2: this.state.option2,\r\n                option3: this.state.option3,\r\n                option4: this.state.option4,\r\n                answer: this.state.answer\r\n            })\r\n            .then(()=> {  \r\n                //Clear the textfields after insertion\r\n                this.setState({\r\n                    question: '',\r\n                    option1: '',\r\n                    option2: '',\r\n                    option3: '',\r\n                    option4: '',\r\n                    answer: ''\r\n                })  \r\n            })\r\n        }\r\n  };\r\n\r\n    render() {\r\n        return (           \r\n              <form>\r\n                <label>Enter Question: </label>\r\n                <input ref=\"q\" name=\"txtQuestion\" onChange={this.handleChange} type=\"text\" value={this.state.question} size=\"70\"></input>\r\n                <hr />\r\n                Answer Options\r\n                <p>\r\n                    <label>Option 1: </label>\r\n                    <input ref=\"o1\" name=\"txtOption1\" onChange={this.handleChange} type=\"text\" value={this.state.option1}></input>\r\n                </p>\r\n                <p>\r\n                    <label>Option 2: </label>\r\n                    <input ref=\"o2\" name=\"txtOption2\" onChange={this.handleChange} type=\"text\" value={this.state.option2}></input>\r\n                </p>\r\n                <p>\r\n                    <label>Option 3: </label>\r\n                    <input ref=\"o3\" name=\"txtOption3\" onChange={this.handleChange} type=\"text\" value={this.state.option3}></input>\r\n                </p>\r\n                <p>\r\n                    <label>Option 4: </label>\r\n                    <input ref=\"o4\" name=\"txtOption4\" onChange={this.handleChange} type=\"text\" value={this.state.option4}></input>\r\n                </p>  \r\n                <hr />\r\n                <p>\r\n                    <label>Answer: </label>\r\n                    <input name=\"txtAnswer\" onChange={this.handleChange} type=\"text\" value={this.state.answer}></input>\r\n                </p>  \r\n                <hr />                              \r\n                    <input type=\"submit\" className=\"button\" value=\"Submit Question\" onClick={this.insertData} ></input>                \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}