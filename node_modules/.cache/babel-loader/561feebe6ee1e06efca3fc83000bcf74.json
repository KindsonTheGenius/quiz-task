{"ast":null,"code":"import _classCallCheck from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\ReactProjects\\\\storage-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import Dexie from'dexie';import React,{Component}from'react';import Form from'./Form';import Game from'./Game.js';import'./styles.css';import Header from'./Header';export var QuestionManager=/*#__PURE__*/function(_Component){_inherits(QuestionManager,_Component);function QuestionManager(props){var _this;_classCallCheck(this,QuestionManager);_this=_possibleConstructorReturn(this,_getPrototypeOf(QuestionManager).call(this,props));_this.loadQuestions=function(){var db=new Dexie('questionsDB');db.version(2).stores({questions:'id,question, option1, option2, option3, option4, answer'});var arr=[];db.questions.each(function(item){return arr.push(item);}).then(function(){return _this.setState({questionBank:arr});});};_this.deleteQuestion=function(event){var db=new Dexie('questionsDB');db.version(2).stores({questions:'id,question, option1, option2, option3, option4, answer'});db.open().catch(function(){console.log(\"Error Occurred\");});var clickedId=event.target.id;//id of the delete button holds the key for delete operation\ndb.questions.delete(clickedId).then(function(){_this.loadQuestions();});};_this.state={questionBank:[],cancel:false};return _this;}//Load the question from IndexedDB\n_createClass(QuestionManager,[{key:\"render\",value:function render(){var _this2=this;this.loadQuestions();//Display the list of questions\nvar list=this.state.questionBank.map(function(result){return React.createElement(\"div\",{className:\"questionItem\",key:result.id},React.createElement(\"span\",null,result.question),React.createElement(\"button\",{id:result.id,onClick:_this2.deleteQuestion},\"Delete\"),React.createElement(\"br\",null),\"A. \",result.option1,\"; B. \",result.option2,\"; C. \",result.option3,\"; D. \",result.option4,\";\",React.createElement(\"hr\",null));});if(this.state.cancel===true){//User want to exit the question Manager\nreturn React.createElement(Game,{username:this.props.username});}else{//Form displays below the list\nreturn React.createElement(\"div\",null,React.createElement(Header,{username:this.props.username}),React.createElement(\"center\",null,React.createElement(\"h3\",null,\"Available Questions\")),list,React.createElement(\"center\",null,React.createElement(\"h3\",null,\"Enter new question using the form below\")),React.createElement(\"div\",{className:\"container small\"},React.createElement(Form,null),React.createElement(\"button\",{onClick:function onClick(){_this2.setState({cancel:true});}},\"Cancel\")));}}}]);return QuestionManager;}(Component);export default QuestionManager;","map":{"version":3,"sources":["D:/ReactProjects/storage-app/src/QuestionManager.js"],"names":["Dexie","React","Component","Form","Game","Header","QuestionManager","props","loadQuestions","db","version","stores","questions","arr","each","item","push","then","setState","questionBank","deleteQuestion","event","open","catch","console","log","clickedId","target","id","delete","state","cancel","list","map","result","question","option1","option2","option3","option4","username"],"mappings":"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","sourcesContent":["import Dexie from 'dexie'\r\n\r\nimport React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport Game from './Game.js'\r\nimport './styles.css'\r\nimport Header from './Header'\r\n\r\nexport class QuestionManager extends Component {\r\n\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        questionBank: [],\r\n        cancel: false\r\n    }\r\n}\r\n\r\n    //Load the question from IndexedDB\r\n    loadQuestions = () => {\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n        let arr = [];\r\n        db.questions.each((item) => arr.push(item))\r\n        .then(() => this.setState({questionBank: arr}));\r\n    }\r\n\r\n\r\n    //Function to Delete Question based on the key\r\n    deleteQuestion = (event) => {\r\n        var db = new Dexie('questionsDB');\r\n        db.version(2).stores({\r\n            questions: 'id,question, option1, option2, option3, option4, answer'\r\n        });\r\n        db.open().catch(function(){\r\n            console.log(\"Error Occurred\")\r\n        });\r\n        var clickedId = event.target.id; //id of the delete button holds the key for delete operation\r\n        db.questions.delete(clickedId).then(() =>{\r\n            this.loadQuestions();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.loadQuestions()\r\n        //Display the list of questions\r\n        var list = this.state.questionBank.map(result =>{\r\n            return (\r\n                <div className=\"questionItem\" key={result.id}><span>{result.question}</span><button id={result.id} onClick={this.deleteQuestion}>Delete</button><br /> \r\n                        A. {result.option1};\r\n                        B. {result.option2};  \r\n                        C. {result.option3};  \r\n                        D. {result.option4}; \r\n                        <hr />\r\n                </div>\r\n            )\r\n        });\r\n        if(this.state.cancel === true){ //User want to exit the question Manager\r\n            return (\r\n                <Game username={this.props.username}></Game>\r\n            )\r\n        }\r\n        else {\r\n            //Form displays below the list\r\n        return (\r\n            <div>   \r\n                <Header username={this.props.username} />  \r\n                <center><h3>Available Questions</h3></center>           \r\n                {list}\r\n                <center><h3>Enter new question using the form below</h3></center>\r\n                <div className=\"container small\">\r\n                  <Form />\r\n                  <button onClick={() => { this.setState({cancel:true}) }}>Cancel</button>\r\n              </div> \r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\nexport default QuestionManager"]},"metadata":{},"sourceType":"module"}